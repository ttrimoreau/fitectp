@model ContosoUniversity.ViewModels.RegisterVM


@{
    ViewBag.Title = "Register User";
}

<div class="bloc">

    <h2>Register new account</h2>


    @using (Html.BeginForm("Register","Authentication"))
    {
        @Html.AntiForgeryToken()


        //FirstMidName
        <div class="form-group">
            @Html.LabelFor(model => model.FirstMidName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.FirstMidName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstMidName, "", new { @class = "text-danger" })
            </div>
        </div>

        //    LastName
        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        //    Email
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        //    UserName
        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>


        //    Role
        <div class="form-group">
            @Html.LabelFor(model => model.PersonRole, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EnumDropDownListFor(model => model.PersonRole, new { onchange = "ToggleHireDateVisibility()", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PersonRole, "", new { @class = "text-danger" })
            </div>
        </div>

        //    Password
        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>


        //    ConfirmPassword
        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        //    HireDate
        <div class="form-group" id="HireDateDiv" visibility: hidden>
            @Html.LabelFor(model => model.HireDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.HireDate, new { htmlAttributes = new { @class = "form-control", Value = DateTime.Now.ToString("yyyy-MM-dd") } })
                @Html.ValidationMessageFor(model => model.HireDate, "", new { @class = "text-danger" })
            </div>
        </div>

        //Submit
        <div class="form-group" id="submit">
            <div class="col-md-offset-2 col-md-12 submit">
                <input type="submit" value="Register Account" class="btn btn-default" />
            </div>
        </div>


    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">

        //Sets the default date for input HireDate (required by ViewModel RegisterVM)
        $(document).ready(function () {
            var now = new Date();
            var day = ("0" + now.getDate()).slice(-2);
            var month = ("0" + (now.getMonth() + 1)).slice(-2);
            var today = now.getFullYear() + "-" + (month) + "-" + (day);
            $('#HireDate').val(today);
        });

        //Shows or hides the visibility of the HireDate section
        function ToggleHireDateVisibility() {
            var SelectedRole = PersonRole.options[PersonRole.selectedIndex].text; // Value from DropDown: 'Instructor' or 'Student'
            if (SelectedRole == 'Instructor') {
                $("#HireDateDiv").show();
            } else {
                $("#HireDateDiv").hide();
            }
        }
</script>
}
